name: CI/CD Pipeline with Selenium Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  # Pour permettre le d√©ploiement sur tags
  create:
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install browser
        run: |
          if [ "${{ matrix.browser }}" = "firefox" ]; then
            sudo apt-get update
            sudo apt-get install -y firefox
          else
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
          fi

      - name: Install dependencies
        run: |
          cd tests
          pip install -r requirements.txt

      - name: Run Selenium Tests
        env:
          CI: true
          SELENIUM_BROWSER: ${{ matrix.browser }}
        run: |
          cd tests
          python -m pytest test_selenium.py -v --html=../test-report-${{ matrix.browser }}.html --self-contained-html

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.browser }}
          path: test-report-${{ matrix.browser }}.html

      - name: Send email on failure
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "[CI/CD] Selenium tests failed on ${{ github.repository }} (${{ matrix.browser }})"
          to: ${{ secrets.MAIL_RECEIVER }}
          from: ${{ secrets.MAIL_USERNAME }}
          body: |
            The Selenium CI/CD tests failed for browser: ${{ matrix.browser }}.
            Repository: ${{ github.repository }}
            Branch/Ref: ${{ github.ref }}
            Commit: ${{ github.sha }}
            See GitHub Actions for details.
          secure: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./src
